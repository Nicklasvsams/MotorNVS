// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MotorNVS.DAL.Database;

#nullable disable

namespace MotorNVS.DAL.Migrations
{
    [DbContext(typeof(MotorDBContext))]
    partial class MotorDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MotorNVS.DAL.Database.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("date");

                    b.Property<string>("StreetAndNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ZipCodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZipCodeId");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2022, 3, 23, 8, 31, 26, 97, DateTimeKind.Local).AddTicks(2806),
                            StreetAndNo = "Bakkevej 18",
                            ZipCodeId = 2
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2022, 3, 23, 8, 31, 26, 97, DateTimeKind.Local).AddTicks(2874),
                            StreetAndNo = "Pladehalebakke 15",
                            ZipCodeId = 1
                        });
                });

            modelBuilder.Entity("MotorNVS.DAL.Database.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Convertible"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "SUV"
                        });
                });

            modelBuilder.Entity("MotorNVS.DAL.Database.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 2,
                            CreateDate = new DateTime(2022, 3, 23, 8, 31, 26, 97, DateTimeKind.Local).AddTicks(2970),
                            FirstName = "Nicklas",
                            IsActive = "yes",
                            LastName = "Sams"
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 1,
                            CreateDate = new DateTime(2022, 3, 23, 8, 31, 26, 97, DateTimeKind.Local).AddTicks(2986),
                            FirstName = "Henning",
                            IsActive = "yes",
                            LastName = "Bjarkesen"
                        });
                });

            modelBuilder.Entity("MotorNVS.DAL.Database.Entities.Fuel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FuelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Fuel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FuelName = "Gasoline"
                        },
                        new
                        {
                            Id = 2,
                            FuelName = "Diesel"
                        });
                });

            modelBuilder.Entity("MotorNVS.DAL.Database.Entities.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Login");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "Passw0rd",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("MotorNVS.DAL.Database.Entities.Registration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("IsActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("date");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Registration");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            IsActive = "yes",
                            RegistrationDate = new DateTime(2022, 3, 23, 8, 31, 26, 97, DateTimeKind.Local).AddTicks(3292),
                            VehicleId = 2
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            IsActive = "yes",
                            RegistrationDate = new DateTime(2022, 3, 23, 8, 31, 26, 97, DateTimeKind.Local).AddTicks(3308),
                            VehicleId = 1
                        });
                });

            modelBuilder.Entity("MotorNVS.DAL.Database.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("date");

                    b.Property<int>("FuelId")
                        .HasColumnType("int");

                    b.Property<string>("IsActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("FuelId");

                    b.ToTable("Vehicle");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            CreateDate = new DateTime(2022, 3, 23, 8, 31, 26, 97, DateTimeKind.Local).AddTicks(3198),
                            FuelId = 1,
                            IsActive = "yes",
                            Make = "Suzuki",
                            Model = "Vitara"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreateDate = new DateTime(2022, 3, 23, 8, 31, 26, 97, DateTimeKind.Local).AddTicks(3216),
                            FuelId = 2,
                            IsActive = "yes",
                            Make = "Volkswagen",
                            Model = "Beetle Turbo"
                        });
                });

            modelBuilder.Entity("MotorNVS.DAL.Database.Entities.Zipcode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ZipcodeNo")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Zipcode");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "København SV",
                            ZipcodeNo = "2450"
                        },
                        new
                        {
                            Id = 2,
                            City = "Frederiksværk",
                            ZipcodeNo = "3300"
                        });
                });

            modelBuilder.Entity("MotorNVS.DAL.Database.Entities.Address", b =>
                {
                    b.HasOne("MotorNVS.DAL.Database.Entities.Zipcode", "Zipcode")
                        .WithMany()
                        .HasForeignKey("ZipCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zipcode");
                });

            modelBuilder.Entity("MotorNVS.DAL.Database.Entities.Customer", b =>
                {
                    b.HasOne("MotorNVS.DAL.Database.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("MotorNVS.DAL.Database.Entities.Registration", b =>
                {
                    b.HasOne("MotorNVS.DAL.Database.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotorNVS.DAL.Database.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("MotorNVS.DAL.Database.Entities.Vehicle", b =>
                {
                    b.HasOne("MotorNVS.DAL.Database.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotorNVS.DAL.Database.Entities.Fuel", "Fuel")
                        .WithMany()
                        .HasForeignKey("FuelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Fuel");
                });
#pragma warning restore 612, 618
        }
    }
}
